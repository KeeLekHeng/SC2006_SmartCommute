{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\SC2006\\\\smartcommute\\\\frontend\\\\src\\\\pages\\\\SearchPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport Alert from '../components/Alert';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleMap, useJsApiLoader, StandaloneSearchBox, Marker, Polyline } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_GMAPSAPI;\nconst libraries = ['places'];\nconst SearchPage = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [center, setCenter] = useState({\n    lat: 1.3521,\n    lng: 103.8198\n  });\n  const [startLocation, setStartLocation] = useState('');\n  const [destination, setDestination] = useState('');\n  const [alert, setAlert] = useState({\n    show: false,\n    message: '',\n    type: ''\n  });\n  const [userLocation, setUserLocation] = useState(null);\n  const [line, setLine] = useState(null);\n  const [destinationMarkerPosition, setDestinationMarkerPosition] = useState(null);\n  const [startLocationMarkerPosition, setStartLocationMarkerPosition] = useState(null);\n  const startRef = useRef(null);\n  const destinationRef = useRef(null);\n  const navigate = useNavigate();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: API_KEY,\n    libraries: libraries\n  });\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userLatLng = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(userLatLng);\n      }, error => {\n        console.error('Error getting user location:', error);\n      });\n    }\n  }, []);\n  const clearAllLines = () => {\n    lines.forEach(polyline => polyline.setMap(null)); // Remove each line from the map\n    setLines([]); // Reset the array of lines\n  };\n  const drawLineBetweenMarkers = (start, destination) => {\n    // Clear any existing line before drawing a new one\n    if (line) {\n      line.setMap(null);\n      setLine(null);\n    }\n    const path = [new window.google.maps.LatLng(start.lat, start.lng), new window.google.maps.LatLng(destination.lat, destination.lng)];\n    const newLine = new window.google.maps.Polyline({\n      path: path,\n      geodesic: true,\n      strokeColor: '#FF0000',\n      strokeOpacity: 1.0,\n      strokeWeight: 2\n    });\n    newLine.setMap(map);\n    setLines(prevLines => [...prevLines, newLine]); // Add the new line to the lines array\n\n    const bounds = new window.google.maps.LatLngBounds();\n    bounds.extend(new window.google.maps.LatLng(start.lat, start.lng));\n    bounds.extend(new window.google.maps.LatLng(destination.lat, destination.lng));\n    map.fitBounds(bounds);\n  };\n  const handleStartLocationClear = () => {\n    setStartLocation('');\n    setStartLocationMarkerPosition(null);\n    setMarkers(prevMarkers => prevMarkers.filter(marker => marker.title !== 'Starting Location'));\n\n    // Remove the line if it exists\n    clearAllLines();\n  };\n  const handleDestinationClear = () => {\n    setDestination('');\n    setDestinationMarkerPosition(null);\n    setMarkers(prevMarkers => prevMarkers.filter(marker => marker.title !== 'Destination'));\n    if (line) {\n      line.setMap(null);\n      setLine(null);\n    }\n  };\n  const handleOnPlacesChanged = (inputType, ref) => {\n    const places = ref.getPlaces();\n    if (places && places.length > 0) {\n      const place = places[0];\n      if (place.geometry && place.geometry.location) {\n        const location = place.geometry.location;\n        const newMarker = {\n          position: {\n            lat: location.lat(),\n            lng: location.lng()\n          },\n          title: inputType === 'start' ? 'Starting Location' : 'Destination'\n        };\n        if (inputType === 'start') {\n          setStartLocation(place.formatted_address);\n          setStartLocationMarkerPosition(newMarker.position);\n          setMarkers(prevMarkers => prevMarkers.filter(marker => marker.title !== 'Starting Location').concat(newMarker));\n          if (map) {\n            map.setZoom(15); // Zoom in on starting location\n            map.panTo(newMarker.position); // Center map on starting location\n          }\n          if (line) line.setMap(null);\n        } else {\n          setDestination(place.formatted_address);\n          setDestinationMarkerPosition(newMarker.position);\n          setMarkers(prevMarkers => prevMarkers.filter(marker => marker.title !== 'Destination').concat(newMarker));\n        }\n        if (map) {\n          if (inputType === 'start' && destinationMarkerPosition) {\n            drawLineBetweenMarkers(newMarker.position, destinationMarkerPosition);\n          } else if (inputType === 'destination' && startLocationMarkerPosition) {\n            drawLineBetweenMarkers(startLocationMarkerPosition, newMarker.position);\n          }\n        }\n      }\n    } else {\n      setAlert({\n        show: true,\n        message: 'Invalid location selected.',\n        type: 'error'\n      });\n    }\n  };\n  const handleUseCurrentLocation = () => {\n    if (userLocation) {\n      setStartLocation('Your Current Location');\n      setStartLocationMarkerPosition(userLocation);\n      setMarkers(prevMarkers => prevMarkers.filter(marker => marker.title !== 'Starting Location').concat({\n        position: userLocation,\n        title: 'Starting Location'\n      }));\n      if (destinationMarkerPosition) {\n        drawLineBetweenMarkers(userLocation, destinationMarkerPosition);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex w-full h-[calc(100vh-8rem)] overflow-hidden pt-20\",\n    children: [alert.show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 left-0 right-0 p-4 z-40\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        type: alert.type,\n        message: alert.message,\n        onClose: () => setAlert({\n          ...alert,\n          show: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-3/5 h-full\",\n      children: isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: {\n          width: '100%',\n          height: '600px'\n        },\n        zoom: 12,\n        center: center,\n        onLoad: mapInstance => setMap(mapInstance),\n        children: [markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: marker.position,\n          title: marker.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this)), line && /*#__PURE__*/_jsxDEV(Polyline, {\n          path: line.getPath().getArray(),\n          options: {\n            strokeColor: '#FF0000',\n            strokeWeight: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-2/5 h-full flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-3/4 max-w-md max-h-full overflow-hidden flex flex-col justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border border-gray-300 bg-gray-100 p-4 rounded-md mb-4 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Enter your starting and ending location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUseCurrentLocation,\n          className: \"mb-4 bg-green-300 p-2 rounded-md\",\n          children: \"Use Current Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full mb-4 relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startLocation\",\n            className: \"block text-gray-700 text-lg font-medium mb-2\",\n            children: \"Starting Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), isLoaded && /*#__PURE__*/_jsxDEV(StandaloneSearchBox, {\n            onLoad: ref => startRef.current = ref,\n            onPlacesChanged: () => handleOnPlacesChanged('start', startRef.current),\n            options: {\n              componentRestrictions: {\n                country: 'SG'\n              },\n              strictBounds: true\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter starting location\",\n              className: \"w-full p-3 border border-gray-300 rounded-lg shadow-sm\",\n              value: startLocation,\n              onChange: e => setStartLocation(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartLocationClear,\n            className: \"absolute right-3 top-1/2 transform bg-gray-300 text-sm text-gray-700 p-1 rounded-full hover:bg-gray-400\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full mb-4 relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"destination\",\n            className: \"block text-gray-700 text-lg font-medium mb-2\",\n            children: \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), isLoaded && /*#__PURE__*/_jsxDEV(StandaloneSearchBox, {\n            onLoad: ref => destinationRef.current = ref,\n            onPlacesChanged: () => handleOnPlacesChanged('destination', destinationRef.current),\n            options: {\n              componentRestrictions: {\n                country: 'SG'\n              },\n              strictBounds: true\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter destination\",\n              className: \"w-full p-3 border border-gray-300 rounded-lg shadow-sm\",\n              value: destination,\n              onChange: e => setDestination(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDestinationClear,\n            className: \"absolute right-3 top-1/2 transform bg-gray-300 text-sm text-gray-700 p-1 rounded-full hover:bg-gray-400\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/comparison'),\n          className: \"w-full bg-blue-500 text-white p-3 rounded-lg font-medium hover:bg-blue-600 transition duration-200\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"Bzhf86+E0JWqR6HJORQG4xDI0bU=\", false, function () {\n  return [useNavigate, useJsApiLoader];\n});\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Alert","useNavigate","GoogleMap","useJsApiLoader","StandaloneSearchBox","Marker","Polyline","jsxDEV","_jsxDEV","API_KEY","process","env","REACT_APP_GMAPSAPI","libraries","SearchPage","_s","map","setMap","markers","setMarkers","center","setCenter","lat","lng","startLocation","setStartLocation","destination","setDestination","alert","setAlert","show","message","type","userLocation","setUserLocation","line","setLine","destinationMarkerPosition","setDestinationMarkerPosition","startLocationMarkerPosition","setStartLocationMarkerPosition","startRef","destinationRef","navigate","isLoaded","id","googleMapsApiKey","navigator","geolocation","getCurrentPosition","position","userLatLng","coords","latitude","longitude","error","console","clearAllLines","lines","forEach","polyline","setLines","drawLineBetweenMarkers","start","path","window","google","maps","LatLng","newLine","geodesic","strokeColor","strokeOpacity","strokeWeight","prevLines","bounds","LatLngBounds","extend","fitBounds","handleStartLocationClear","prevMarkers","filter","marker","title","handleDestinationClear","handleOnPlacesChanged","inputType","ref","places","getPlaces","length","place","geometry","location","newMarker","formatted_address","concat","setZoom","panTo","handleUseCurrentLocation","className","children","onClose","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","width","height","zoom","onLoad","mapInstance","index","getPath","getArray","options","onClick","htmlFor","current","onPlacesChanged","componentRestrictions","country","strictBounds","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/SC2006/smartcommute/frontend/src/pages/SearchPage.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Alert from '../components/Alert';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GoogleMap, useJsApiLoader, StandaloneSearchBox, Marker, Polyline } from \"@react-google-maps/api\";\r\n\r\nconst API_KEY = process.env.REACT_APP_GMAPSAPI;\r\nconst libraries = ['places'];\r\n\r\nconst SearchPage = () => {\r\n  const [map, setMap] = useState(null);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [center, setCenter] = useState({ lat: 1.3521, lng: 103.8198 });\r\n  const [startLocation, setStartLocation] = useState('');\r\n  const [destination, setDestination] = useState('');\r\n  const [alert, setAlert] = useState({ show: false, message: '', type: '' });\r\n  const [userLocation, setUserLocation] = useState(null);\r\n\r\n  const [line, setLine] = useState(null);\r\n  const [destinationMarkerPosition, setDestinationMarkerPosition] = useState(null);\r\n  const [startLocationMarkerPosition, setStartLocationMarkerPosition] = useState(null);\r\n\r\n  const startRef = useRef(null);\r\n  const destinationRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: API_KEY,\r\n    libraries: libraries,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const userLatLng = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          };\r\n          setUserLocation(userLatLng);\r\n        },\r\n        (error) => {\r\n          console.error('Error getting user location:', error);\r\n        }\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const clearAllLines = () => {\r\n    lines.forEach((polyline) => polyline.setMap(null)); // Remove each line from the map\r\n    setLines([]); // Reset the array of lines\r\n};\r\n\r\n  const drawLineBetweenMarkers = (start, destination) => {\r\n    // Clear any existing line before drawing a new one\r\n    if (line) {\r\n      line.setMap(null);\r\n      setLine(null);\r\n  }\r\n\r\n    const path = [\r\n        new window.google.maps.LatLng(start.lat, start.lng),\r\n        new window.google.maps.LatLng(destination.lat, destination.lng),\r\n    ];\r\n\r\n    const newLine = new window.google.maps.Polyline({\r\n        path: path,\r\n        geodesic: true,\r\n        strokeColor: '#FF0000',\r\n        strokeOpacity: 1.0,\r\n        strokeWeight: 2,\r\n    });\r\n\r\n    newLine.setMap(map);\r\n    setLines((prevLines) => [...prevLines, newLine]); // Add the new line to the lines array\r\n\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    bounds.extend(new window.google.maps.LatLng(start.lat, start.lng));\r\n    bounds.extend(new window.google.maps.LatLng(destination.lat, destination.lng));\r\n    map.fitBounds(bounds);\r\n  };\r\n\r\n  const handleStartLocationClear = () => {\r\n    setStartLocation('');\r\n    setStartLocationMarkerPosition(null);\r\n    setMarkers((prevMarkers) => prevMarkers.filter(marker => marker.title !== 'Starting Location'));\r\n\r\n    // Remove the line if it exists\r\n    clearAllLines();\r\n};\r\n\r\nconst handleDestinationClear = () => {\r\n    setDestination('');\r\n    setDestinationMarkerPosition(null);\r\n    setMarkers((prevMarkers) => prevMarkers.filter(marker => marker.title !== 'Destination'));\r\n\r\n    if (line) {\r\n        line.setMap(null);\r\n        setLine(null);\r\n    }\r\n};\r\n\r\n  const handleOnPlacesChanged = (inputType, ref) => {\r\n    const places = ref.getPlaces();\r\n    if (places && places.length > 0) {\r\n        const place = places[0];\r\n        if (place.geometry && place.geometry.location) {\r\n            const location = place.geometry.location;\r\n\r\n            const newMarker = {\r\n                position: { lat: location.lat(), lng: location.lng() },\r\n                title: inputType === 'start' ? 'Starting Location' : 'Destination',\r\n            };\r\n\r\n            if (inputType === 'start') {\r\n                setStartLocation(place.formatted_address);\r\n                setStartLocationMarkerPosition(newMarker.position);\r\n\r\n                setMarkers((prevMarkers) => prevMarkers\r\n                    .filter(marker => marker.title !== 'Starting Location')\r\n                    .concat(newMarker));\r\n                \r\n                if (map) {\r\n                    map.setZoom(15);  // Zoom in on starting location\r\n                    map.panTo(newMarker.position);  // Center map on starting location\r\n                }\r\n\r\n                if (line) line.setMap(null);\r\n            } else {\r\n                setDestination(place.formatted_address);\r\n                setDestinationMarkerPosition(newMarker.position);\r\n\r\n                setMarkers((prevMarkers) => prevMarkers\r\n                    .filter(marker => marker.title !== 'Destination')\r\n                    .concat(newMarker));\r\n            }\r\n\r\n            if (map) {\r\n                if (inputType === 'start' && destinationMarkerPosition) {\r\n                    drawLineBetweenMarkers(newMarker.position, destinationMarkerPosition);\r\n                } else if (inputType === 'destination' && startLocationMarkerPosition) {\r\n                    drawLineBetweenMarkers(startLocationMarkerPosition, newMarker.position);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        setAlert({ show: true, message: 'Invalid location selected.', type: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleUseCurrentLocation = () => {\r\n    if (userLocation) {\r\n      setStartLocation('Your Current Location');\r\n      setStartLocationMarkerPosition(userLocation);\r\n      setMarkers((prevMarkers) => prevMarkers.filter(marker => marker.title !== 'Starting Location')\r\n        .concat({ position: userLocation, title: 'Starting Location' }));\r\n      if (destinationMarkerPosition) {\r\n        drawLineBetweenMarkers(userLocation, destinationMarkerPosition);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex w-full h-[calc(100vh-8rem)] overflow-hidden pt-20\">\r\n      {alert.show && (\r\n        <div className=\"absolute top-0 left-0 right-0 p-4 z-40\">\r\n          <Alert type={alert.type} message={alert.message} onClose={() => setAlert({ ...alert, show: false })} />\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"w-3/5 h-full\">\r\n        {isLoaded ? (\r\n          <GoogleMap\r\n            mapContainerStyle={{ width: '100%', height: '600px' }}\r\n            zoom={12}\r\n            center={center}\r\n            onLoad={(mapInstance) => setMap(mapInstance)}\r\n          >\r\n            {markers.map((marker, index) => (\r\n              <Marker key={index} position={marker.position} title={marker.title} />\r\n            ))}\r\n            {line && <Polyline path={line.getPath().getArray()} options={{ strokeColor: '#FF0000', strokeWeight: 2 }} />}\r\n          </GoogleMap>\r\n        ) : (\r\n          <div>Loading....</div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"w-2/5 h-full flex items-center justify-center p-4\">\r\n        <div className=\"w-3/4 max-w-md max-h-full overflow-hidden flex flex-col justify-center\">\r\n          <div className=\"border border-gray-300 bg-gray-100 p-4 rounded-md mb-4 text-center\">\r\n            <p className=\"text-gray-600\">Enter your starting and ending location</p>\r\n          </div>\r\n\r\n          <button onClick={handleUseCurrentLocation} className=\"mb-4 bg-green-300 p-2 rounded-md\">\r\n            Use Current Location\r\n          </button>\r\n\r\n          <div className=\"w-full mb-4 relative\">\r\n            <label htmlFor=\"startLocation\" className=\"block text-gray-700 text-lg font-medium mb-2\">\r\n              Starting Location\r\n            </label>\r\n            {isLoaded && (\r\n              <StandaloneSearchBox\r\n                onLoad={(ref) => (startRef.current = ref)}\r\n                onPlacesChanged={() => handleOnPlacesChanged('start', startRef.current)}\r\n                options={{ componentRestrictions: { country: 'SG' }, strictBounds: true }}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter starting location\"\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg shadow-sm\"\r\n                  value={startLocation}\r\n                  onChange={(e) => setStartLocation(e.target.value)}\r\n                />\r\n              </StandaloneSearchBox>\r\n            )}\r\n            <button \r\n              onClick={handleStartLocationClear} \r\n              className=\"absolute right-3 top-1/2 transform bg-gray-300 text-sm text-gray-700 p-1 rounded-full hover:bg-gray-400\"\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"w-full mb-4 relative\">\r\n            <label htmlFor=\"destination\" className=\"block text-gray-700 text-lg font-medium mb-2\">\r\n              Destination\r\n            </label>\r\n            {isLoaded && (\r\n              <StandaloneSearchBox\r\n                onLoad={(ref) => (destinationRef.current = ref)}\r\n                onPlacesChanged={() => handleOnPlacesChanged('destination', destinationRef.current)}\r\n                options={{ componentRestrictions: { country: 'SG' }, strictBounds: true }}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter destination\"\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg shadow-sm\"\r\n                  value={destination}\r\n                  onChange={(e) => setDestination(e.target.value)}\r\n                />\r\n              </StandaloneSearchBox>\r\n            )}\r\n            <button \r\n              onClick={handleDestinationClear} \r\n              className=\"absolute right-3 top-1/2 transform bg-gray-300 text-sm text-gray-700 p-1 rounded-full hover:bg-gray-400\"\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n\r\n          <button onClick={() => navigate('/comparison')} className=\"w-full bg-blue-500 text-white p-3 rounded-lg font-medium hover:bg-blue-600 transition duration-200\">\r\n            Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}