{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\SC2006\\\\smartcommute\\\\frontend\\\\src\\\\pages\\\\SearchPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Alert from '../components/Alert';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleMap, useJsApiLoader, StandaloneSearchBox, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_GMAPSAPI;\nconst libraries = ['places'];\nconst SearchPage = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [center, setCenter] = useState({\n    lat: 1.3521,\n    lng: 103.8198\n  }); //map view\n\n  const [startLocation, setStartLocation] = useState('');\n  const [destination, setDestination] = useState('');\n  const [alert, setAlert] = useState({\n    show: false,\n    message: '',\n    type: ''\n  });\n  const lineRef = useRef(null); // Reference to hold the line\n  const startRef = useRef(null);\n  const destinationRef = useRef(null);\n  const navigate = useNavigate();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: API_KEY,\n    libraries: libraries\n  });\n  const singaporeBounds = {\n    north: 1.477,\n    south: 1.15,\n    east: 104.0945,\n    west: 103.594\n  };\n  const drawLineBetweenMarkers = (start, destination, map) => {\n    // Remove the old line if it exists\n    if (lineRef.current) {\n      lineRef.current.setMap(null);\n    }\n\n    // Create a new line\n    if (start && destination) {\n      const path = [new window.google.maps.LatLng(start.lat, start.lng), new window.google.maps.LatLng(destination.lat, destination.lng)];\n      const line = new window.google.maps.Polyline({\n        path: path,\n        geodesic: true,\n        strokeColor: '#FF0000',\n        // Color of the line\n        strokeOpacity: 1.0,\n        strokeWeight: 2\n      });\n      line.setMap(map); // Set the new line on the map\n      lineRef.current = line; // Store the new line reference\n    }\n  };\n  const handleOnPlacesChanged = (inputType, ref) => {\n    const places = ref.getPlaces();\n\n    // Check if 'places' is defined and has at least one result\n    if (places && places.length > 0) {\n      const place = places[0];\n\n      // Check if the place has geometry\n      if (place.geometry && place.geometry.location) {\n        const location = place.geometry.location;\n        const newMarker = {\n          position: {\n            lat: location.lat(),\n            lng: location.lng()\n          },\n          title: inputType === 'start' ? 'Starting Location' : 'Destination'\n        };\n\n        // Update the start or destination location in the state\n        if (inputType === 'start') {\n          setStartLocation(place.formatted_address);\n          setMarkers(prevMarkers => {\n            // Remove existing start marker if it exists\n            const updatedMarkers = prevMarkers.filter(marker => marker.title !== 'Starting Location');\n            return [...updatedMarkers, newMarker]; // Add the new start marker\n          });\n        } else {\n          setDestination(place.formatted_address);\n          setMarkers(prevMarkers => {\n            // Remove existing destination marker if it exists\n            const updatedMarkers = prevMarkers.filter(marker => marker.title !== 'Destination');\n            return [...updatedMarkers, newMarker]; // Add the new destination marker\n          });\n        }\n\n        // Move the map to the new marker's position\n        if (map) {\n          map.setCenter(newMarker.position);\n          if (inputType === 'start') {\n            map.setZoom(14);\n          } else {\n            const bounds = new window.google.maps.LatLngBounds();\n            bounds.extend(newMarker.position); // Destination marker position\n            const startMarker = markers.find(marker => marker.title === 'Starting Location'); // Find current start marker\n            if (startMarker) {\n              bounds.extend(startMarker.position); // Start marker position if it exists\n            }\n            map.fitBounds(bounds);\n            const destinationMarker = markers.find(marker => marker.title === 'Destination');\n            drawLineBetweenMarkers(startMarker === null || startMarker === void 0 ? void 0 : startMarker.position, newMarker.position, map);\n            if (startMarker && destinationMarker) {\n              drawLineBetweenMarkers(startMarker.position, newMarker.position, map);\n            }\n          }\n        }\n      } else {\n        setAlert({\n          show: true,\n          message: 'Invalid location selected. Please choose from the dropdown.',\n          type: 'error'\n        });\n      }\n    } else {\n      setAlert({\n        show: true,\n        message: 'No locations found. Please try a different search.',\n        type: 'error'\n      });\n    }\n  };\n  const handleSearch = () => {\n    if (!startLocation || !destination) {\n      setAlert({\n        show: true,\n        message: 'Please enter both starting location and destination.',\n        type: 'error'\n      });\n      return;\n    }\n\n    //go to comparisons page\n    navigate('/comparison');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex w-full h-[calc(100vh-8rem)] overflow-hidden pt-20\",\n    children: [alert.show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 left-0 right-0 p-4\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        type: alert.type,\n        message: alert.message,\n        onClose: () => setAlert({\n          ...alert,\n          show: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-3/5 h-full top-0\",\n      children: isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: {\n          width: '100%',\n          height: '600px'\n        },\n        zoom: 12,\n        center: center,\n        onLoad: mapInstance => setMap(mapInstance),\n        children: markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: marker.position,\n          title: marker.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-2/5 h-full flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-3/4 max-w-md max-h-full overflow-hidden flex flex-col justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border border-gray-300 bg-gray-100 p-4 rounded-md mb-4 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Enter your starting and ending location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startLocation\",\n            className: \"block text-gray-700 text-lg font-medium mb-2\",\n            children: \"Starting Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 11\n          }, this), isLoaded && /*#__PURE__*/_jsxDEV(StandaloneSearchBox, {\n            onLoad: ref => startRef.current = ref,\n            onPlacesChanged: () => handleOnPlacesChanged('start', startRef.current),\n            options: {\n              componentRestrictions: {\n                country: 'SG'\n              },\n              strictBounds: true\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter starting location\",\n              className: \"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 shadow-sm\",\n              onKeyDown: e => {\n                // Prevent Enter key from triggering anything\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n                }\n              },\n              onChange: e => setStartLocation(e.target.value) // Update state on change\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"destination\",\n            className: \"block text-gray-700 text-lg font-medium mb-2\",\n            children: \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 11\n          }, this), isLoaded && /*#__PURE__*/_jsxDEV(StandaloneSearchBox, {\n            onLoad: ref => destinationRef.current = ref,\n            onPlacesChanged: () => handleOnPlacesChanged('destination', destinationRef.current),\n            options: {\n              componentRestrictions: {\n                country: 'SG'\n              },\n              strictBounds: true\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter destination\",\n              className: \"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 shadow-sm\",\n              onKeyDown: e => {\n                e.key === 'Enter' && e.preventDefault();\n              },\n              onChange: e => setDestination(e.target.value) // Update state on change\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          className: \"w-full bg-green-500 text-white py-3 px-6 rounded-lg font-semibold hover:bg-green-600 transition\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 3\n  }, this);\n};\n_s(SearchPage, \"gpwmPKyiRepSXsW31ekiS1J/7Co=\", false, function () {\n  return [useNavigate, useJsApiLoader];\n});\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useRef","Alert","useNavigate","GoogleMap","useJsApiLoader","StandaloneSearchBox","Marker","jsxDEV","_jsxDEV","API_KEY","process","env","REACT_APP_GMAPSAPI","libraries","SearchPage","_s","map","setMap","markers","setMarkers","center","setCenter","lat","lng","startLocation","setStartLocation","destination","setDestination","alert","setAlert","show","message","type","lineRef","startRef","destinationRef","navigate","isLoaded","id","googleMapsApiKey","singaporeBounds","north","south","east","west","drawLineBetweenMarkers","start","current","path","window","google","maps","LatLng","line","Polyline","geodesic","strokeColor","strokeOpacity","strokeWeight","handleOnPlacesChanged","inputType","ref","places","getPlaces","length","place","geometry","location","newMarker","position","title","formatted_address","prevMarkers","updatedMarkers","filter","marker","setZoom","bounds","LatLngBounds","extend","startMarker","find","fitBounds","destinationMarker","handleSearch","className","children","onClose","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","width","height","zoom","onLoad","mapInstance","index","htmlFor","onPlacesChanged","options","componentRestrictions","country","strictBounds","placeholder","onKeyDown","e","key","preventDefault","onChange","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/SC2006/smartcommute/frontend/src/pages/SearchPage.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Alert from '../components/Alert'; \r\nimport { useNavigate } from 'react-router-dom'; \r\nimport { GoogleMap, useJsApiLoader, StandaloneSearchBox, Marker } from \"@react-google-maps/api\";\r\n\r\nconst API_KEY = process.env.REACT_APP_GMAPSAPI;\r\nconst libraries = ['places'];\r\n\r\nconst SearchPage = () => {\r\n  const [map, setMap] = useState(null);\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  const[center, setCenter] = useState({lat: 1.3521, lng: 103.8198,})            //map view\r\n\r\n  const [startLocation, setStartLocation] = useState('');\r\n  const [destination, setDestination] = useState('');\r\n  const [alert, setAlert] = useState({ show: false, message: '', type: '' });\r\n\r\n\r\n  const lineRef = useRef(null);           // Reference to hold the line\r\n  const startRef = useRef(null);\r\n  const destinationRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: API_KEY,\r\n    libraries: libraries,\r\n  });\r\n\r\n  const singaporeBounds = {\r\n    north: 1.477,\r\n    south: 1.15,\r\n    east: 104.0945,\r\n    west: 103.594,\r\n  };\r\n\r\n  const drawLineBetweenMarkers = (start, destination, map) => {\r\n    // Remove the old line if it exists\r\n    if (lineRef.current) {\r\n      lineRef.current.setMap(null);\r\n    }\r\n\r\n    // Create a new line\r\n    if (start && destination) {\r\n      const path = [\r\n        new window.google.maps.LatLng(start.lat, start.lng),\r\n        new window.google.maps.LatLng(destination.lat, destination.lng),\r\n      ];\r\n\r\n      const line = new window.google.maps.Polyline({\r\n        path: path,\r\n        geodesic: true,\r\n        strokeColor: '#FF0000', // Color of the line\r\n        strokeOpacity: 1.0,\r\n        strokeWeight: 2, \r\n      });\r\n\r\n      line.setMap(map);               // Set the new line on the map\r\n      lineRef.current = line;         // Store the new line reference\r\n    }\r\n  };\r\n  \r\n\r\n  const handleOnPlacesChanged = (inputType, ref) => {\r\n    const places = ref.getPlaces();\r\n  \r\n    // Check if 'places' is defined and has at least one result\r\n    if (places && places.length > 0) {\r\n      const place = places[0];\r\n  \r\n      // Check if the place has geometry\r\n      if (place.geometry && place.geometry.location) {\r\n        const location = place.geometry.location;\r\n  \r\n        const newMarker = {\r\n          position: { lat: location.lat(), lng: location.lng() },\r\n          title: inputType === 'start' ? 'Starting Location' : 'Destination',\r\n        };\r\n  \r\n        // Update the start or destination location in the state\r\n        if (inputType === 'start') {\r\n          setStartLocation(place.formatted_address);\r\n          setMarkers((prevMarkers) => {\r\n            // Remove existing start marker if it exists\r\n            const updatedMarkers = prevMarkers.filter(marker => marker.title !== 'Starting Location');\r\n            return [...updatedMarkers, newMarker]; // Add the new start marker\r\n          });\r\n        } else {\r\n          setDestination(place.formatted_address);\r\n          setMarkers((prevMarkers) => {\r\n            // Remove existing destination marker if it exists\r\n            const updatedMarkers = prevMarkers.filter(marker => marker.title !== 'Destination');\r\n            return [...updatedMarkers, newMarker]; // Add the new destination marker\r\n          });\r\n        }\r\n  \r\n        // Move the map to the new marker's position\r\n        if (map) {\r\n          map.setCenter(newMarker.position);\r\n          if (inputType === 'start') {\r\n            map.setZoom(14);\r\n          } else {\r\n            const bounds = new window.google.maps.LatLngBounds();\r\n            bounds.extend(newMarker.position); // Destination marker position\r\n            const startMarker = markers.find(marker => marker.title === 'Starting Location'); // Find current start marker\r\n            if (startMarker) {\r\n              bounds.extend(startMarker.position); // Start marker position if it exists\r\n            }\r\n            map.fitBounds(bounds);\r\n            const destinationMarker = markers.find(marker => marker.title === 'Destination');\r\n            drawLineBetweenMarkers(startMarker?.position, newMarker.position, map);\r\n\r\n            if (startMarker && destinationMarker) {\r\n              drawLineBetweenMarkers(startMarker.position, newMarker.position, map);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        setAlert({ show: true, message: 'Invalid location selected. Please choose from the dropdown.', type: 'error' });\r\n      }\r\n    } else {\r\n      setAlert({ show: true, message: 'No locations found. Please try a different search.', type: 'error' });\r\n    }\r\n  };\r\n  \r\n\r\n  const handleSearch = () => {\r\n    if (!startLocation || !destination) {\r\n      setAlert({ show: true, message: 'Please enter both starting location and destination.', type: 'error' });\r\n      return;\r\n    }\r\n\r\n    //go to comparisons page\r\n    navigate('/comparison');\r\n  };\r\n\r\n  return (\r\n  <div className=\"flex w-full h-[calc(100vh-8rem)] overflow-hidden pt-20\">\r\n    {alert.show && (\r\n      <div className=\"absolute top-0 left-0 right-0 p-4\">\r\n        <Alert type={alert.type} message={alert.message} onClose={() => setAlert({ ...alert, show: false })} />\r\n      </div>\r\n    )}\r\n\r\n    {/* Left section (Map) */}\r\n    <div className=\"w-3/5 h-full top-0\">\r\n      {isLoaded ? (\r\n        <GoogleMap\r\n          mapContainerStyle={{ width: '100%', height: '600px' }}\r\n          zoom={12}\r\n          center={center}\r\n          onLoad={(mapInstance) => setMap(mapInstance)}\r\n        >\r\n          {markers.map((marker, index) => (\r\n            <Marker key={index} position={marker.position} title={marker.title} />\r\n          ))}\r\n        </GoogleMap>\r\n      ) : (\r\n        <div>Loading....</div>\r\n      )}\r\n    </div>\r\n\r\n    {/* Right section (Search bars) */}\r\n    <div className=\"w-2/5 h-full flex items-center justify-center p-4\">\r\n      <div className=\"w-3/4 max-w-md max-h-full overflow-hidden flex flex-col justify-center\">\r\n        <div className=\"border border-gray-300 bg-gray-100 p-4 rounded-md mb-4 text-center\">\r\n          <p className=\"text-gray-600\">Enter your starting and ending location</p>\r\n        </div>\r\n\r\n        <div className=\"w-full mb-4\">\r\n          <label htmlFor=\"startLocation\" className=\"block text-gray-700 text-lg font-medium mb-2\">\r\n            Starting Location\r\n          </label>\r\n          {isLoaded && (\r\n            <StandaloneSearchBox\r\n              onLoad={(ref) => (startRef.current = ref)}\r\n              onPlacesChanged={() => handleOnPlacesChanged('start', startRef.current)}\r\n              options={{\r\n                componentRestrictions: { country: 'SG' },\r\n                strictBounds: true,\r\n              }}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter starting location\"\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 shadow-sm\"\r\n                onKeyDown={(e) => {\r\n                  // Prevent Enter key from triggering anything\r\n                  if (e.key === 'Enter') {\r\n                    e.preventDefault(); \r\n                  }\r\n                }}\r\n                onChange={(e) => setStartLocation(e.target.value)} // Update state on change\r\n              />\r\n            </StandaloneSearchBox>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"w-full mb-4\">\r\n          <label htmlFor=\"destination\" className=\"block text-gray-700 text-lg font-medium mb-2\">\r\n            Destination\r\n          </label>\r\n          {isLoaded && (\r\n            <StandaloneSearchBox\r\n              onLoad={(ref) => (destinationRef.current = ref)}\r\n              onPlacesChanged={() => handleOnPlacesChanged('destination', destinationRef.current)}\r\n              options={{\r\n                componentRestrictions: { country: 'SG' },\r\n                strictBounds: true, \r\n              }}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter destination\"\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 shadow-sm\"\r\n                onKeyDown={(e) => { e.key === 'Enter' && e.preventDefault(); }}\r\n                onChange={(e) => setDestination(e.target.value)} // Update state on change\r\n              />\r\n            </StandaloneSearchBox>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          onClick={handleSearch}\r\n          className=\"w-full bg-green-500 text-white py-3 px-6 rounded-lg font-semibold hover:bg-green-600 transition\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}