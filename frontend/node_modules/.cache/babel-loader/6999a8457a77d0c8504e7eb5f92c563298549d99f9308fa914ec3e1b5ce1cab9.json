{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\SC2006\\\\smartcommute\\\\frontend\\\\src\\\\components\\\\GpsRequest.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GpsRequest = ({\n  onAllow,\n  onDeny\n}) => {\n  _s();\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const requestGPS = () => {\n    //Restrictive browsers may not allow GPS connection\n    if (!navigator.geolocation) {\n      console.error(\"Geolocation is not supported by this browser.\");\n      if (typeof onDeny === 'function') onDeny();\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(position => {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n      onAllow({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      });\n    }, error => {\n      console.error(\"Error getting location: \", error);\n      onDeny();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-green-500 text-white py-2 px-6 rounded-lg font-semibold hover:bg-green-600 transition w-32\",\n      onClick: requestGPS // Trigger function when Allow GPS is clicked\n      ,\n      children: \"Allow GPS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-gray-300 text-gray-700 py-2 px-6 rounded-lg font-semibold hover:bg-gray-400 transition w-32\",\n      onClick: onDeny // Trigger function when Don't Allow is clicked\n      ,\n      children: \"Don\\u2019t Allow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(GpsRequest, \"BUG0Ax3z725GSUDN6MQmUZ59zHI=\");\n_c = GpsRequest;\nexport default GpsRequest;\nvar _c;\n$RefreshReg$(_c, \"GpsRequest\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","GpsRequest","onAllow","onDeny","_s","latitude","setLatitude","longitude","setLongitude","requestGPS","navigator","geolocation","console","error","getCurrentPosition","position","coords","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/SC2006/smartcommute/frontend/src/components/GpsRequest.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst GpsRequest = ({ onAllow, onDeny }) => {\r\n    const [latitude, setLatitude] = useState('');\r\n    const [longitude, setLongitude] = useState('');\r\n\r\n    const requestGPS = () => {\r\n\r\n        //Restrictive browsers may not allow GPS connection\r\n        if (!navigator.geolocation) {\r\n            console.error(\"Geolocation is not supported by this browser.\");\r\n            if (typeof onDeny === 'function') onDeny();\r\n            return;\r\n        }\r\n\r\n        navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                setLatitude(position.coords.latitude);\r\n                setLongitude(position.coords.longitude);\r\n                onAllow({ latitude: position.coords.latitude, longitude: position.coords.longitude });\r\n            },\r\n            (error) => {\r\n                console.error(\"Error getting location: \", error);\r\n                onDeny();\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                className=\"bg-green-500 text-white py-2 px-6 rounded-lg font-semibold hover:bg-green-600 transition w-32\"\r\n                onClick={requestGPS} // Trigger function when Allow GPS is clicked\r\n            >\r\n                Allow GPS\r\n            </button>\r\n            <button\r\n                className=\"bg-gray-300 text-gray-700 py-2 px-6 rounded-lg font-semibold hover:bg-gray-400 transition w-32\"\r\n                onClick={onDeny} // Trigger function when Don't Allow is clicked\r\n            >\r\n                Donâ€™t Allow\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GpsRequest;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMc,UAAU,GAAGA,CAAA,KAAM;IAErB;IACA,IAAI,CAACC,SAAS,CAACC,WAAW,EAAE;MACxBC,OAAO,CAACC,KAAK,CAAC,+CAA+C,CAAC;MAC9D,IAAI,OAAOV,MAAM,KAAK,UAAU,EAAEA,MAAM,CAAC,CAAC;MAC1C;IACJ;IAEAO,SAAS,CAACC,WAAW,CAACG,kBAAkB,CACnCC,QAAQ,IAAK;MACVT,WAAW,CAACS,QAAQ,CAACC,MAAM,CAACX,QAAQ,CAAC;MACrCG,YAAY,CAACO,QAAQ,CAACC,MAAM,CAACT,SAAS,CAAC;MACvCL,OAAO,CAAC;QAAEG,QAAQ,EAAEU,QAAQ,CAACC,MAAM,CAACX,QAAQ;QAAEE,SAAS,EAAEQ,QAAQ,CAACC,MAAM,CAACT;MAAU,CAAC,CAAC;IACzF,CAAC,EACAM,KAAK,IAAK;MACPD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDV,MAAM,CAAC,CAAC;IACZ,CACJ,CAAC;EACL,CAAC;EAED,oBACIL,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACInB,OAAA;MACIoB,SAAS,EAAC,+FAA+F;MACzGC,OAAO,EAAEV,UAAW,CAAC;MAAA;MAAAQ,QAAA,EACxB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTzB,OAAA;MACIoB,SAAS,EAAC,gGAAgG;MAC1GC,OAAO,EAAEhB,MAAO,CAAC;MAAA;MAAAc,QAAA,EACpB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACX,CAAC;AAEX,CAAC;AAACnB,EAAA,CA1CIH,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AA4ChB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}